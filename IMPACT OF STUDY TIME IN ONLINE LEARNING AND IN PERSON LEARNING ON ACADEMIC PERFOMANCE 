{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyP5I8EAGZs+Dp/0NuQ2dtc1",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Cyprian-The-Analyst/Heart-disease-predictor/blob/main/IMPACT%20OF%20STUDY%20TIME%20IN%20ONLINE%20LEARNING%20AND%20IN%20PERSON%20LEARNING%20ON%20ACADEMIC%20PERFOMANCE%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 73
        },
        "id": "Js6Y0ApoxAQB",
        "outputId": "400e26de-9bd8-4fcf-997f-3a29bffb90bb"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-66007860-3eb5-446f-b5ce-c8f9403bb121\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-66007860-3eb5-446f-b5ce-c8f9403bb121\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving Cooperative_University_Study_Data_Updated.csv to Cooperative_University_Study_Data_Updated.csv\n"
          ]
        }
      ],
      "source": [
        "from google.colab import files\n",
        "uploaded =files.upload()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "# Load the dataset\n",
        "df = pd.read_csv(\"Cooperative_University_Study_Data_Updated.csv\")\n",
        "\n",
        "# Check for missing values\n",
        "print(df.isnull().sum())\n",
        "\n",
        "# Summary statistics\n",
        "print(df.describe())\n",
        "\n",
        "# Histogram of GPA\n",
        "plt.figure(figsize=(8, 5))\n",
        "sns.histplot(df['GPA'], bins=10, kde=True)\n",
        "plt.title(\"Distribution of GPA\")\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 834
        },
        "id": "blH-NbMq1KXk",
        "outputId": "0930265c-d10b-4bf6-9ff9-2e8908b39565"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Student_ID                  0\n",
            "Name                        0\n",
            "Study Hours                 0\n",
            "GPA                         0\n",
            "CF PASS (%)                 0\n",
            "Cumulative GPA              0\n",
            "Preferred Learning Mode     0\n",
            "Distractions               15\n",
            "Online Engagement           0\n",
            "Study Time                  0\n",
            "dtype: int64\n",
            "       Student_ID  Study Hours       GPA  CF PASS (%)  Cumulative GPA\n",
            "count    50.00000    50.000000  50.00000    50.000000       50.000000\n",
            "mean     25.50000    23.880000  63.57640    20.042000       60.687400\n",
            "std      14.57738     8.011828  11.96381     5.872283       12.108398\n",
            "min       1.00000     9.000000  45.03000    10.100000       40.170000\n",
            "25%      13.25000    18.000000  53.86250    14.925000       51.392500\n",
            "50%      25.50000    21.500000  63.56500    20.350000       61.750000\n",
            "75%      37.75000    31.000000  73.73000    25.375000       71.062500\n",
            "max      50.00000    35.000000  84.73000    29.700000       81.340000\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Compute correlation matrix\n",
        "# Clean column names by stripping spaces\n",
        "df.columns = df.columns.str.strip()\n",
        "\n",
        "# Print column names to verify\n",
        "print(\"Columns in DataFrame:\", df.columns)\n",
        "\n",
        "# Check if 'CF PASS' exists before computing correlation\n",
        "columns_to_use = ['Study Hours', 'GPA', 'Cumulative GPA']\n",
        "\n",
        "if 'CF PASS' in df.columns:\n",
        "    columns_to_use.append('CF PASS')\n",
        "\n",
        "# Compute and display correlation matrix\n",
        "correlation_matrix = df[columns_to_use].corr()\n",
        "print(\"\\nCorrelation Matrix:\\n\", correlation_matrix)\n",
        "\n",
        "\n",
        "# Heatmap\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=\".2f\")\n",
        "plt.title(\"Correlation Matrix\")\n",
        "plt.show()\n",
        "\n",
        "# Scatter plot: Study Hours vs GPA\n",
        "plt.figure(figsize=(8, 5))\n",
        "sns.scatterplot(x=df[\"Study Hours\"], y=df[\"GPA\"])\n",
        "plt.title(\"Study Hours vs GPA\")\n",
        "plt.xlabel(\"Study Hours\")\n",
        "plt.ylabel(\"GPA\")\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "IvlTGqZ31Z6u",
        "outputId": "564cea71-87bc-4de1-a91a-fc92fe423ad6"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Columns in DataFrame: Index(['Student_ID', 'Name', 'Study Hours', 'GPA', 'CF PASS (%)',\n",
            "       'Cumulative GPA', 'Preferred Learning Mode', 'Distractions',\n",
            "       'Online Engagement', 'Study Time'],\n",
            "      dtype='object')\n",
            "\n",
            "Correlation Matrix:\n",
            "                 Study Hours       GPA  Cumulative GPA\n",
            "Study Hours        1.000000  0.161264        0.134638\n",
            "GPA                0.161264  1.000000        0.994100\n",
            "Cumulative GPA     0.134638  0.994100        1.000000\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 2 Axes>"
            ],
            "image/png": "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q2znzp1o2bKlqHbYE0dERESSJDc1Xk+cGHl5ebh48aLmc3JyMhITE+Hg4IAXXngBkZGRuHHjBr799lsAwFtvvYUlS5bg448/xvDhwxEfH48ff/wRMTExou7LnjgiIiKiZ3D48GH4+/vD398fABAREQF/f39MnToVAJCamoqUlBRNfS8vL8TExGDnzp1o0qQJ5s+fj5UrVyIkJETUfdkTR0RERJIkM6safVHt2rXDk7bd1fU2hnbt2uHYsWPPdF8mcURERCRJVWU4tbJUjRSWiIiIiERhTxwRERFJkjG3GJEC9sQRERERSRB74oiIiEiSOCeOiIiIiCSHPXFEREQkSZwTR0RERESSw544IiIikiTOiSMiIiIiyWFPHBEREUmSzKR698QxiSMiIiJJklfzJI7DqUREREQSxJ44IiIikiSZnD1xRERERCQx7IkjIiIiSZKZVO++qOr99EREREQSxZ44IiIikiSuTiUiIiIiyWFPHBEREUlSdV+dyiSOiIiIJInDqUREREQkOeyJIyIiIkmq7u9OZU8cERERkQSxJ46IiIgkSSav3n1R1fvpiYiIiCSKPXFEREQkSdV9ixH2xBERERFJEHviiIiISJKq+z5xz5zE5ebmIj4+Hj4+Pqhfv74hYiIiIiJ6Kg6nitS/f38sWbIEAHD//n00a9YM/fv3R+PGjfHzzz8bPEAiIiIiKkt0Erd37160bt0aAPDLL79AEATcuXMHX3zxBWbNmmXwAImIiIh0kcnlRjukQHSUOTk5cHBwAADExsaib9++sLS0RLdu3XDhwgWDB0hEREREZYmeE+fu7o6EhAQ4ODggNjYWGzduBABkZ2dDqVQaPEAiIiIiXar7nDjRSdz777+PwYMHw9raGh4eHmjXrh2AB8OsjRo1MnR8RERERKSD6CTunXfeQVBQEFJSUtCpUyfI/3/cuE6dOpwTR0RERP+Z6r7FiKg5ccXFxfD29oalpSV69+4Na2trzblu3bohODjY4AESERERUVmieuLMzMxQUFBgrFiIiIiI9Fbd58SJXp367rvvYs6cOSgpKTFGPERERER6qe5bjIieE3fo0CHExcVhx44daNSoEaysrLTOb9myxWDBEREREZFuopM4Ozs79O3b1xixEBEREemtug+nik7i1qxZY4w4iIiIiEgEaQz6EhERET1GJpcZ7RBr6dKl8PT0hFKpRFBQEA4ePFhu3eLiYsyYMQPe3t5QKpVo0qQJYmNjRd9TdE+cl5cXZLLyH+7y5cuigyAiIiKSqk2bNiEiIgLLli1DUFAQFi1ahJCQECQlJcHZ2blM/cmTJ+O7777DihUr4Ovri+3bt6N3797Yv38//P399b5vhd7Y8Kji4mIcO3YMsbGx+Oijj8Q2R0RERFQhVWVO3IIFCzBq1CiEh4cDAJYtW4aYmBisXr0aEydOLFN//fr1mDRpErp27QoAePvtt/HXX39h/vz5+O677/S+r+gkbty4cTrLly5disOHD4ttjoiIiEiyioqKcOTIEURGRmrK5HI5OnbsiISEBJ3XFBYWlnnfvIWFBfbt2yfq3gabExcaGoqff/7ZUM0RERERPZEx94krLCxEbm6u1lFYWFgmhszMTJSWlkKlUmmVq1QqpKWl6Yw7JCQECxYswIULF6BWq7Fz505s2bIFqampop7fYEncTz/9BAcHB0M1R0RERPREchOZ0Y7o6GjY2tpqHdHR0QaJe/HixahXrx58fX1hbm6OMWPGIDw8XPM+en2JHk719/fXWtggCALS0tKQkZGBr776SmxzRERERFVOZGQkIiIitMoUCkWZek5OTjAxMUF6erpWeXp6OlxcXHS2XbNmTfz6668oKChAVlYWatWqhYkTJ6JOnTqiYhSdxPXq1Uvrs1wuR82aNdGuXTv4+vqKbY6IiIioQoy5sEGhUOhM2h5nbm6OgIAAxMXFaXIktVqNuLg4jBkz5onXKpVKuLm5obi4GD///DP69+8vKkbRSVxUVJTYS4iIiIieWxERERg6dCiaNWuGwMBALFq0CPn5+ZrVqkOGDIGbm5tmOPaff/7BjRs34Ofnhxs3bmDatGlQq9X4+OOPRd1XdBIHAKWlpfj1119x9uxZAEDDhg3x6quvwsTEpCLNEREREYlWVV5UHxYWhoyMDEydOhVpaWnw8/NDbGysZrFDSkqK1ny3goICTJ48GZcvX4a1tTW6du2K9evXw87OTtR9ZYIgCGIuuHjxIrp27YobN27Ax8cHAJCUlAR3d3fExMTA29tbVAAPxZj5VOg6ImNZ2O/7yg6BSEtBXn5lh0BUxr7f21bavZOHv2q0tr1WbzVa24YiOoUdO3YsvL29ce3aNRw9ehRHjx5FSkoKvLy8MHbsWGPESERERFRGVXrtVmUQPZy6Z88eHDhwQGs7EUdHR8yePRvBwcEGDY6IiIiIdBOdxCkUCty9e7dMeV5eHszNzQ0SFBEREdHTSKXHzFhED6d2794db775Jv755x8IggBBEHDgwAG89dZbePVV441NExERET3KmG9skALRUX7xxRfw9vZGy5YtoVQqoVQqERwcjLp162Lx4sXGiJGIiIiIHiN6ONXOzg6//fYbLly4gHPnzgEA6tevj7p16xo8OCIiIqLyVPfh1ArtEwcA9erVQ7169QwZCxERERHpSe8k7vH3h5VnwYIFFQ6GiIiISF9SmbtmLHoncceOHdP6vG/fPgQEBMDCwkJTJpNV725NIiIiov+K3kncrl27tD7XqFEDGzZsQJ06dQweFBEREdFTVfPOo+rdD0lEREQkURVe2EDG5/ByM9QZPwK2TV+CspYzDvd9B+lb4558TZtANJg3EdYN6qHgWiouRn+N69/+olXH4+1BqBMxAgqXmsg9cQ6n35+JnEMnjfko9Bx5tVNN9O/hAgdbM1xKuYcla68h6ZLud3p61FZiWD831KtjCZeaCnz1bQq2/HmrTD1HezOMGlQbgU1soVDIcTOtAHOXX8H5y/eM/Tj0nOjTtRYG9nGHg705LiXnYeHyizh7oezG9ADg9YIlRgz2hI93DbiqlFi84iI2b72hVadXqCt6hdaCq0oJAEhOuYe1G6/iwJHbRn8W0l91X53KnrgqzMTKErknknBq7HS96lt41kbzrcuRtfsf7GvWE8lfrkOj5bPg1OllTR3X10JRf24kLsxain2BvXH3xDkExayCeU2HJ7RM9EC7FvZ46w13rP/5Jt765AwuX72P2RPrwc5G9++DSnM5Um8VYuUP15GVXaSzjrWVCRZP90VJiYDIORcw4sNTWPbdddzNKzXmo9BzpP3LNTFmpDfW/HAFI94/govJeVgwoxHsbM101lcoTHAzrQDL1l1G5u1CnXUyMouwbF0yRrx/FCM/OIqjJ7IRPakhvF6wNOajkEjVfbNfvXviTpw4ofVZEAScO3cOeXl5WuWNGzc2TGSEjO17kbF9r971Pd4cgPvJ13H24zkAgLxzl+HQKgBe44Yhc+c+AIDX++G4tupHXF+3BQBw8p0oOIe2g/uwvrg0d4XhH4KeK327qbAtPhPb92QBABatuoogf1t0aeeEjVvTytRPunwPSf/fmzZyYG2dbQ7o4YKMrCLMW35FU5aWoTvhI9JlQK/a+H17KrbFpQMA5n51AS2bO6J7Jxd899O1MvXPXbiLc//fS/fWUN3zuv8+lKX1+Zv1V9ArtBYa+NggOYU9xFQ16J3E+fn5QSaTQRAETVn37t0BQFMuk8lQWsrfniuLXQs/ZMYnaJVl7NyHBvM/AQDIzMxg27QhLs1Z/m8FQUBm/H7YtfD/L0MlCTI1keFFLyv88Nu/yZogAEdP5aJBPasKt9sywA6HT+Riyrg6aFy/BrKyi7F15y1si880RNj0nDM1leHFujWw/qcUTZkgAIcTs9HQx8Yg95DLgVeCa0KpNMHpc7kGaZMMo7oPp+qdxCUnJxszDjIAhcoJhena//AVpmfCzLYG5EoFzOxtITc1ReGtrMfqZMHKh6uM6clsbUxhYiJDdk6xVnl2Tgncaykr3K6rswI9OtbET9vS8cNvqfCpY4V3h76A4hIBO/dmPb0BqtZsbcxgaiLD7Wzt7+XtO8XwqP1sQ591PKywbK4/zM3luH+/FJ98ehpXrrEXjqoOvZM4Dw8Pg920sLAQhYXa8xCKBTXMZNIYgyYiw5HJgfOX72H1pgcTyy9euQ9Pdwv06FCTSRxVqpQb9xA+7jCsLU3RLrgmJn3gg/cijzORq0KkMnfNWCrl6aOjo2Fra6t1/Kjmip9nVZieCYXKSatMoXJCcc5dqAsKUZSZDXVJCRTOjo/VcURhGoeu6MlycktQWirA/rHJ4va2psi+U1zOVU93O7sYV6/f1ypLuVEAZyfzCrdJ1UdObjFKSgU42Gt/Lx3szMpdTKOvkhIBN1ILkHQpD8u/Tcal5Hy89qrbM7VJZEiVksRFRkYiJydH6+gv5+rIZ3XnQCIc27fQKnPq0ArZBxIBAEJxMXKOnoZT+5b/VpDJ4PhKS9w5oP1GDqLHlZQKOJ+cj6Yv1dCUyWSAf0MbnLmge4sRfZw+n1dmOLa2qxLpmVzcQE9XUiLg/MW7CGhsrymTyYCAJvY4nWTY+WsyGWBmVr17fqoamVxmtEMKKuXbqFAoYGNjo3VwKLUsEytL2DTxhU0TXwCApVdt2DTxhdLdFQDgMysCTdbM0dS/+s1GWHq5wzf6I1j51IHHW4Pg+lookhev1dRJXrQG7iP6w+2NXrD2rYOXlk6DqZUFrv3/alWiJ/k5Jh1dX6mJTm0c8UItJcYN94BSIUfsngc9uRPe9sSIAf/2VJiayODtYQFvDwuYmsrgZG8Obw8L1FIp/m1zWzrq17XCwJ4uqKVSoH0rB3Rt74TfdpTdT45Il42/XkePEFd0aa+CR21LfPhOPVgo5Yj568EinMkf+GD0EC9NfVNTGep6WaGulxXMTGWo6ahAXS8ruLn++8vE6CFeaNLQFi7OCtTxsMLoIV7wb2SHHbv5vaSqg5v9VmG2AS+hZdx6zecG8x6sMr327RacGBEJhWtNWPx/QgcA969cx6FXR6PB/Eh4vjcEBdfTcHL0ZM32IgCQuvlPmNd0wItRYx9s9nv8LA52H4miW5x7RE+3+0A2bG1MMaxfLdjbmeHS1XuInH0Bd3JKAADOTgqo/13ADkd7Myyf3VDzuX8PF/Tv4YLjZ+5i/MwkAA+2IYlacAkjB7jhjT61kJpRiK/XX0P835xiQfqJ35cBO1szjBzsCQd7c1y8nIfxUSc1w/yqmkqt76WTgznWftFM83lQH3cM6uOOYyfv4L1PjgMA7G3NMPkDXzg6mCM/vwSXruQjIuokDidm/6fPRk8mlR4zY5EJj+4ZooeoqCgMHz7coAsdACDGzMeg7RE9q4X9vq/sEIi0FORVfNiayFj2/d620u59a9Iwo7Xt/Olao7VtKKLHMH/77Td4e3ujQ4cO2LBhQ5lVpkRERERkfKKTuMTERBw6dAgNGzbEuHHj4OLigrfffhuHDh0yRnxEREREOslkMqMdUlCh1QT+/v744osvcPPmTaxatQrXr19HcHAwGjdujMWLFyMnJ8fQcRIRERHRI55pSaggCCguLkZRUREEQYC9vT2WLFkCd3d3bNq0yVAxEhEREZVhjBffPzykoEJRHjlyBGPGjIGrqys++OAD+Pv74+zZs9izZw8uXLiATz/9FGPHjjV0rERERET0/0RvMdKoUSOcO3cOnTt3xqpVq9CjRw+YmJho1Rk4cCDGjRtnsCCJiIiIHlfdtxgRncT1798fw4cPh5tb+a8ecXJyglqtfqbAiIiIiKh8opO4KVOmGCMOIiIiInEkMnfNWPRK4iIiIvRucMGCBRUOhoiIiIj0o1cSd+yY9svRjx49ipKSEvj4PHjLwvnz52FiYoKAgADDR0hERESkA+fE6WHXrl2a/16wYAFq1KiBdevWwd7eHgCQnZ2N8PBwtG7d2jhREhERET1GJqvew6min37+/PmIjo7WJHAAYG9vj1mzZmH+/PkGDY6IiIiIdBO9sCE3NxcZGRllyjMyMnD37l2DBEVERET0VNV8OFV0T1zv3r0RHh6OLVu24Pr167h+/Tp+/vlnjBgxAn369DFGjERERET0GNE9ccuWLcOHH36IQYMGobi4+EEjpqYYMWIE5s6da/AAiYiIiHSRyuuxjEV0EmdpaYmvvvoKc+fOxaVLlwAA3t7esLKyMnhwRERERKSb6CTuISsrKzRu3NiQsRARERHpjVuMiPTKK69AJiv/Dy0+Pv6ZAiIiIiKipxOdxPn5+Wl9Li4uRmJiIk6dOoWhQ4caKi4iIiKiJ6vm+8SJTuIWLlyos3zatGnIy8t75oCIiIiI9FHdh1MNlsK+/vrrWL16taGaIyIiIqInMFgSl5CQAKVSaajmiIiIiJ5MLjfeIdLSpUvh6ekJpVKJoKAgHDx48In1Fy1aBB8fH1hYWMDd3R0ffPABCgoKRN1T9HDq4xv6CoKA1NRUHD58GFOmTBHbHBEREZGkbdq0CREREVi2bBmCgoKwaNEihISEICkpCc7OzmXqb9iwARMnTsTq1avRqlUrnD9/HsOGDYNMJsOCBQv0vq/oJM7GxkZrdapcLoePjw9mzJiBzp07i22OiIiIqEKetFvGf2nBggUYNWoUwsPDATx4MUJMTAxWr16NiRMnlqm/f/9+BAcHY9CgQQAAT09PDBw4EP/884+o+4pO4tauXSv2EiIiIiJJKSwsRGFhoVaZQqGAQqHQKisqKsKRI0cQGRmpKZPL5ejYsSMSEhJ0tt2qVSt89913OHjwIAIDA3H58mVs27YNb7zxhqgYRQ/61qlTB1lZWWXK79y5gzp16ohtjoiIiKhijDgnLjo6Gra2tlpHdHR0mRAyMzNRWloKlUqlVa5SqZCWlqYz7EGDBmHGjBl4+eWXYWZmBm9vb7Rr1w6ffPKJuMcXVRvAlStXUFpaWqa8sLAQN27cENscERERUZUTGRmJnJwcrePR3rZnsXv3bnz22Wf46quvcPToUWzZsgUxMTGYOXOmqHb0Hk7dunWr5r+3b98OW1tbzefS0lLExcXB09NT1M2JiIiIKsqY+8TpGjrVxcnJCSYmJkhPT9cqT09Ph4uLi85rpkyZgjfeeAMjR44EADRq1Aj5+fl48803MWnSJMj1XB2rdxLXq1cvAA8mET7+ZgYzMzN4enpi/vz5+jZHRERE9GyqwBsbzM3NERAQgLi4OE2upFarERcXhzFjxui85t69e2USNRMTEwAPdv3Ql95JnFqtBgB4eXnh0KFDcHJy0vsmRERERM+riIgIDB06FM2aNUNgYCAWLVqE/Px8zWrVIUOGwM3NTTOnrkePHliwYAH8/f0RFBSEixcvYsqUKejRo4cmmdOH6NWpycnJYi8hIiIiMrwq8tqtsLAwZGRkYOrUqUhLS4Ofnx9iY2M1ix1SUlK0et4mT54MmUyGyZMn48aNG6hZsyZ69OiBTz/9VNR9ZYKe/XYJCQnIyspC9+7dNWXffvstoqKikJ+fj169euHLL7/Ua/xYlxgznwpdR2QsC/t9X9khEGkpyMuv7BCIytj3e9tKu3feMsMsNNDF+q2yK1GrGr0Hk2fMmIHTp09rPp88eRIjRoxAx44dMXHiRPz+++86l94SERERGYNMJjfaIQV6R5mYmIgOHTpoPm/cuBFBQUFYsWIFIiIi8MUXX+DHH380SpBEREREpE3vOXHZ2dlaG9nt2bMHoaGhms/NmzfHtWvXDBsdERERUXmqyJy4yqJ3T5xKpdIsaigqKsLRo0fRokULzfm7d+/CzMzM8BESERERURl698R17doVEydOxJw5c/Drr7/C0tISrVu31pw/ceIEvL29jRIkERER0eNkem6K+7zSO4mbOXMm+vTpg7Zt28La2hrr1q2Dubm55vzq1avRuXNnowRJREREVIaseg+n6p3EOTk5Ye/evcjJyYG1tXWZzeg2b94Ma2trgwdIRERERGWJ3uz30XemPsrBweGZgyEiIiLSWzUfTq3eT09EREQkUaJ74oiIiIiqhGo+J449cUREREQSxJ44IiIikqTqvsVI9X56IiIiIoliTxwRERFJk0ReVG8sTOKIiIhImvjuVCIiIiKSGvbEERERkSTJqvlwavV+eiIiIiKJYk8cERERSRPnxBERERGR1LAnjoiIiKSJc+KIiIiISGrYE0dERETSJKvec+KYxBEREZE08d2pRERERCQ17IkjIiIiaeLCBiIiIiKSGvbEERERkTRxs18iIiIikhr2xBEREZE0cU4cEREREUkNe+KIiIhImrjZLxEREZEEcbNfIiIiIpIa9sQRERGRNFXz4VT2xBERERFJEHviiIiISJq4xQgRERERSQ174oiIiEiauDqV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DfeJo6qG+8RRVVSZ+8S9t8h422N9+b5htvMyJtGv3SotLcXChQvx448/IiUlBUVF2pPsb9/mbtZERERkfFKZu2YsomezT58+HQsWLEBYWBhycnIQERGBPn36QC6XY9q0aUYIkYiIiIgeJzqJ+/7777FixQqMHz8epqamGDhwIFauXImpU6fiwIEDxoiRiIiIqIzqvjpVdBKXlpaGRo0aAQCsra01G/92794dMTExho2OiIiIiHQSncTVrl0bqampAABvb2/s2LEDAHDo0KEy24YQERERGYtaMN4hBaKTuN69eyMuLg4A8N5772HKlCmoV68ehgwZguHDhxs8QCIiIiIqS/Tq1NmzZ2v+OywsDC+88AISEhJQr1499OjRw6DBEREREZVHKnPXjEV0Eve4li1bomXLlk+vSERERGRAVWSr20qjVxK3detWvRt89dVXKxwMEREREelHryTu4XtTn0Ymk6G0tPRZ4iEiIiLSi5rDqU+nVquNHQcRERERifDMc+KIiIiIKgPnxIk0Y8aMJ56fOnVqhYMhIiIiIv2ITuJ++eUXrc/FxcVITk6GqakpvL29mcQRERHRf4JbjIh07NixMmW5ubkYNmwYevfubZCgiIiIiOjJRL+xQRcbGxtMnz4dU6ZMMURzRERERE9ljBffPzykwGALG3JycpCTk2Oo5oiIiIieSM2FDeJ88cUXWp8FQUBqairWr1+P0NBQgwVGREREROUTncQtXLhQ67NcLkfNmjUxdOhQREZGGiwwIiIioieRyrCnsYhO4pKTk40RBxERERGJwM1+iYiISJK42a9IBQUF+PLLL7Fr1y7cunWrzCu5jh49arDgiIiIiEg30UnciBEjsGPHDvTr1w+BgYGQyWTGiIuIiIjoidScEyfOH3/8gW3btiE4ONgY8RARERGRHkQncW5ubqhRo4YxYiEiIiLSW3VfnSr6jQ3z58/HhAkTcPXqVWPEQ0RERKQXQRCMdkiB6J64Zs2aoaCgAHXq1IGlpSXMzMy0zt++fdtgwRERERGRbqKTuIEDB+LGjRv47LPPoFKpuLCBiIiIKoXw2A4Z1Y3oJG7//v1ISEhAkyZNjBEPEREREelBdBLn6+uL+/fvGyMWIiIiIr1V9y1GRC9smD17NsaPH4/du3cjKysLubm5WgcRERERGZ/onrguXboAADp06KBVLggCZDIZSktLDRMZERER0RNIZRWpsYhO4nbt2mWMOIiIiIhIBNFJXNu2bY0RBxEREZEoVWmz36VLl2Lu3LlIS0tDkyZN8OWXXyIwMFBn3RUrVuDbb7/FqVOnAAABAQH47LPPyq1fHtFJ3N69e594vk2bNmKbJCIiIhKtqiRxmzZtQkREBJYtW4agoCAsWrQIISEhSEpKgrOzc5n6u3fvxsCBA9GqVSsolUrMmTMHnTt3xunTp+Hm5qb3fWWCyAFlubzsWohH94qr6Jy4l3vsqdB1RMbySdzoyg6BSItQXDX+wSJ6VLfipEq7d79xl43W9k+L6+hdNygoCM2bN8eSJUsAAGq1Gu7u7njvvfcwceLEp15fWloKe3t7LFmyBEOGDNH7vqJXp2ZnZ2sdt27dQmxsLJo3b44dO3aIbY6IiIioQtSC2mhHYWFhmR04CgsLy8RQVFSEI0eOoGPHjpoyuVyOjh07IiEhQa/nuHfvHoqLi+Hg4CDq+UUncba2tlqHk5MTOnXqhDlz5uDjjz8W2xwRERFRlRMdHV0m54mOji5TLzMzE6WlpVCpVFrlKpUKaWlpet1rwoQJqFWrllYiqA/Rc+LKo1KpkJRUeV2qREREVL0Yc05cZGQkIiIitMoUCoXB7zN79mxs3LgRu3fvhlKpFHWt6CTuxIkTWp8FQUBqaipmz54NPz8/sc0RERERVTkKhUKvpM3JyQkmJiZIT0/XKk9PT4eLi8sTr503bx5mz56Nv/76C40bNxYdo+gkzs/PDzKZrMwGey1atMDq1atFB0BERERUEVVhdaq5uTkCAgIQFxeHXr16AXiwsCEuLg5jxowp97rPP/8cn376KbZv345mzZpV6N6ik7jk5GStz3K5HDVr1hTdBUhERET0PIiIiMDQoUPRrFkzBAYGYtGiRcjPz0d4eDgAYMiQIXBzc9PMqZszZw6mTp2KDRs2wNPTUzN3ztraGtbW1nrfV3QS5+HhIfYSIiIiIoOrKq/dCgsLQ0ZGBqZOnYq0tDT4+fkhNjZWs9ghJSVFa4u2r7/+GkVFRejXr59WO1FRUZg2bZre99U7iYuPj8eYMWNw4MAB2NjYaJ3LyclBq1atsGzZMrRu3VrvmxMRERFVlFqtruwQNMaMGVPu8Onu3bu1Pl+5csUg99R7i5FFixZh1KhRZRI44MG2I6NHj8aCBQsMEhQRERERPZneSdzx48fRpUuXcs937twZR44cMUhQRERERE8jqAWjHVKgdxKXnp4OMzOzcs+bmpoiIyPDIEERERER0ZPpncS5ubnh1KlT5Z4/ceIEXF1dDRIUERER0dMIgtpohxToncR17doVU6ZMQUFBQZlz9+/fR1RUFLp3727Q4IiIiIhIN71Xp06ePBlbtmzBiy++iDFjxsDHxwcAcO7cOSxduhSlpaWYNGmS0QIlIiIiepRU5q4Zi95JnEqlwv79+/H2228jMjJSszeLTCZDSEgIli5dWublr0RERERkHKI2+/Xw8MC2bduQnZ2NixcvQhAE1KtXD/b29saKj4iIiEgn9sRVgL29PZo3b27oWIiIiIj0ppbIAgRj0XthAxERERFVHRXqiSMiIiKqbNV9OJU9cUREREQSxJ44IiIikiRBzTlxRERERCQx7IkjIiIiSeKcOCIiIiKSHPbEERERkSRJ5UX1xsIkjoiIiCRJzeFUIiIiIpIa9sQRERGRJHGLESIiIiKSHPbEERERkSRxixEiIiIikhz2xBEREZEkVfctRtgTR0RERCRB7IkjIiIiSaruc+KYxBEREZEkcYsRIiIiIpIcmSAI1bsv8jlSWFiI6OhoREZGQqFQVHY4RAD4vaSqh99Jel4wiXuO5ObmwtbWFjk5ObCxsanscIgA8HtJVQ+/k/S84HAqERERkQQxiSMiIiKSICZxRERERBLEJO45olAoEBUVxYm6VKXwe0lVDb+T9LzgwgYiIiIiCWJPHBEREZEEMYkjIiIikiAmcUREREQSxCSuCmvXrh3ef//9yg6DiKjKkslk+PXXX6tMO0T/JSZxImRkZODtt9/GCy+8AIVCARcXF4SEhODvv//W1KlKPwiuXLkCmUyGxMTEMueYINKzSktLw7hx41C3bl0olUqoVCoEBwfj66+/xr179wAAnp6ekMlkkMlksLKyQtOmTbF582atdu7fvw8HBwc4OTmhsLCwMh6FniAtLQ3vvfce6tSpA4VCAXd3d/To0QNxcXGVHVqFTJs2DX5+fmXKU1NTERoaavT7Hzt2DGFhYXB1dYVCoYCHhwe6d++O33//HQ/XGT782f3wcHR0ROfOnXHs2DGtthISEmBiYoJu3boZPW6qmpjEidC3b18cO3YM69atw/nz57F161a0a9cOWVlZlR1alVRUVFTZIZCRXL58Gf7+/tixYwc+++wzHDt2DAkJCfj444/xxx9/4K+//tLUnTFjBlJTU3Hs2DE0b94cYWFh2L9/v+b8zz//jIYNG8LX17fK/AJED1y5cgUBAQGIj4/H3LlzcfLkScTGxuKVV17Bu+++W9nhGZSLi4vRtxz57bff0KJFC+Tl5WHdunU4e/YsYmNj0bt3b0yePBk5OTla9f/66y+kpqZi+/btyMvLQ2hoKO7cuaM5v2rVKrz33nvYu3cvbt68adTYqYoSSC/Z2dkCAGH37t3l1vHw8BAAaA4PDw9BEARh6NChQs+ePbXqjhs3Tmjbtq3mc15envDGG28IVlZWgouLizBv3jyhbdu2wrhx4wRBEITp06cLDRs2LHPPJk2aCJMnT9YZT3JysgBAOHbsWJlzj7YtCIJw+/Zt4Y033hDs7OwECwsLoUuXLsL58+c156OiooQmTZpotbFw4ULNMz76nLNmzRJcXV0FT09PQRAEYenSpULdunUFhUIhODs7C3379tUZL0lHSEiIULt2bSEvL0/nebVaLQjCg/8nFi5cqCkvLi4WLC0thYkTJ2rK2rVrJyxbtkz4+uuvhU6dOhk1bhInNDRUcHNz0/n3nJ2dLQiC7p8zD39e7tq1SxAEQdi1a5cAQIiNjRX8/PwEpVIpvPLKK0J6erqwbds2wdfXV6hRo4YwcOBAIT8/X9PO498fQXjwMy8qKkrzGYDwyy+/aD5//PHHQr169QQLCwvBy8tLmDx5slBUVCQIgiCsWbNG62c0AGHNmjVl2mnZsqXw8ccfa9331q1bgqmpqbBnzx5BEAShoKBAGD9+vFCrVi3B0tJSCAwM1DyvLnl5eYKjo6PQu3fvcus8/P9G15/p33//rfkzFARBuHv3rmBtbS2cO3dOCAsLEz799NNy26XnF3vi9GRtbQ1ra2v8+uuv5Q75HDp0CACwZs0apKamaj7r46OPPsKePXvw22+/YceOHdi9ezeOHj2qOT98+HCcPXtWq81jx47hxIkTCA8Pr+BT/WvYsGE4fPgwtm7dioSEBAiCgK5du6K4uFhUO3FxcUhKSsLOnTvxxx9/4PDhwxg7dixmzJiBpKQkxMbGok2bNs8cL1WerKws7NixA++++y6srKx01pHJZDrLTU1NYWZmpumlvXTpEhISEtC/f3/0798f//vf/3D16lWjxU76u337NmJjY8v9e7azsxPd5rRp07BkyRLs378f165dQ//+/bFo0SJs2LABMTEx2LFjB7788stnirtGjRpYu3Ytzpw5g8WLF2PFihVYuHAhACAsLAzjx49Hw4YNkZqaitTUVISFhZVpY/Dgwdi4caNmeBMANm3ahFq1aqF169YAgDFjxiAhIQEbN27EiRMn8Nprr6FLly64cOGCzrh27NiBrKwsfPzxx+XGXt7/NwBgYWEB4N8Rjh9//BG+vr7w8fHB66+/jtWrV2vFS9UDkzg9mZqaYu3atVi3bh3s7OwQHByMTz75BCdOnNDUqVmzJoAHP9xcXFw0n58mLy8Pq1atwrx589ChQwc0atQI69atQ0lJiaZO7dq1ERISgjVr1mjK1qxZg7Zt26JOnTpPbL9Vq1aaJPTh8b///U9z/sKFC9i6dStWrlyJ1q1bo0mTJvj+++9x48YN0cNbVlZWWLlyJRo2bIiGDRsiJSUFVlZW6N69Ozw8PODv74+xY8eKapOqlosXL0IQBPj4+GiVOzk5ab5fEyZMKHNdUVERoqOjkZOTg/bt2wMAVq9ejdDQUNjb28PBwaHMd5wqz8O/Z19fX4O1OWvWLAQHB8Pf3x8jRozAnj178PXXX8Pf3x+tW7dGv379sGvXrme6x+TJk9GqVSt4enqiR48e+PDDD/Hjjz8CeJAIWVtbw9TUFC4uLnBxcdEkR4/q378/bt68iX379mnKNmzYgIEDB0ImkyElJQVr1qzB5s2b0bp1a3h7e+PDDz/Eyy+/XO739/z58wCg9f/NoUOHtH4u//HHHzqvvXPnDmbOnAlra2sEBgYCeDCU+vrrrwMAunTpgpycHOzZs6cCf2IkZUziROjbty9u3ryJrVu3okuXLti9ezeaNm2KtWvXPlO7ly5dQlFREYKCgjRlDg4OZf6RHDVqFH744QcUFBSgqKgIGzZswPDhw5/a/qZNm5CYmKh1NGvWTHP+7NmzMDU11bq/o6MjfHx8cPbsWVHP0qhRI5ibm2s+d+rUCR4eHqhTpw7eeOMNfP/995pJ7/R8OXjwIBITE9GwYUOt3uoJEybA2toalpaWmDNnDmbPno1u3bqhtLQU69at0/xDBACvv/461q5dC7VaXRmPQI8wRq9O48aNNf+tUqlgaWmp9UuoSqXCrVu3nukemzZtQnBwMFxcXGBtbY3JkycjJSVFVBs1a9ZE586d8f333wMAkpOTkZCQgMGDBwMATp48idLSUrz44otaSdiePXtw6dIlve/TuHFjzc/k/Px8rV/cgX9/Abe3t8fx48exadMmqFQqJCUl4eDBgxg4cCCAB50MYWFhWLVqlajnJOkzrewApEapVKJTp07o1KkTpkyZgpEjRyIqKgrDhg0r9xq5XF7mB6LYYUoA6NGjBxQKBX755ReYm5ujuLgY/fr1e+p17u7uqFu3rlaZrt8+n0TfZ3h82KVGjRo4evQodu/ejR07dmDq1KmYNm0aDh06VKHhGKp8devWhUwmQ1JSklb5w3+MH/9uffTRRxg2bBisra2hUqk0Q0bbt2/HjRs3ygxnlZaWIi4uDp06dTLiU9DT1KtXDzKZDOfOnXtiPbn8QV/Aoz8fyvv5ZmZmpvlvmUym9flh2aMJvNifnQ8TrenTpyMkJAS2trbYuHEj5s+f/8Rn0GXw4MEYO3YsvvzyS2zYsAGNGjVCo0aNADwYPTExMcGRI0dgYmKidZ21tbXO9urVqwcASEpKQosWLQA8eIfr4z+bH7Vp0yY0aNAAjo6OWj8vV61ahZKSEtSqVUtTJggCFAoFlixZAltbW9HPS9LEnrhn1KBBA+Tn52s+m5mZobS0VKtOzZo1kZqaqlX26LYf3t7eMDMzwz///KMpy87O1nS/P2RqaoqhQ4dizZo1WLNmDQYMGCA6GdOlfv36KCkp0bp/VlYWkpKS0KBBA80zpKWlaf1A1bV1iS6mpqbo2LEjPv/8c5w4cQJXrlxBfHz8M8dNlcPR0RGdOnXCkiVLtL775XFyckLdunXh4uKiNedn1apVGDBgQJle4gEDBrBHoQp4OLy9dOlSnX/PD1dJPpw28ujPOH1/NjzN4z87c3NzkZycXG79/fv3w8PDA5MmTUKzZs1Qr169MnMszc3Ny/yM1qVnz54oKChAbGwsNmzYoOmFAwB/f3+Ulpbi1q1bqFu3rtbh4uKis73OnTvDwcEBc+bMeeq9H3J3d4e3t7dWAldSUoJvv/0W8+fP1/r/5vjx46hVqxZ++OEHvdsn6WNPnJ6ysrLw2muvYfjw4WjcuDFq1KiBw4cP4/PPP0fPnj019Tw9PREXF4fg4GAoFArY29ujffv2mDt3Lr799lu0bNkS3333HU6dOgV/f38AD35zGzFiBD766CM4OjrC2dkZkyZN0vyG+6iRI0eifv36AKC1P92zqFevHnr27IlRo0Zh+fLlqFGjBiZOnAg3NzfNs7Vr1w4ZGRn4/PPP0a9fP8TGxuLPP/+EjY3NE9v+448/cPnyZbRp0wb29vbYtm0b1Gp1maFikpavvvoKwcHBaNasGaZNm4bGjRtDLpfj0KFDOHfuHAICAp54fUZGBn7//Xds3boVL730kta5IUOGoHfv3rh9+zYcHByM+Rj0FEuXLkVwcDACAwMxY8YMNG7cGCUlJdi5cye+/vprnD17FhYWFmjRogVmz54NLy8v3Lp1C5MnTzbI/du3b4+1a9eiR48esLOzw9SpU8v0fD2qXr16SElJwcaNG9G8eXPExMTgl19+0arj6emJ5ORkJCYmonbt2qhRo4bOrUWsrKzQq1cvTJkyBWfPntUMXQLAiy++iMGDB2PIkCGYP38+/P39kZGRgbi4ODRu3Fjnvm3W1tZYuXIlwsLC0K1bN4wdOxb16tVDXl4eYmNjAeCJz/bQH3/8gezsbIwYMaJMj1vfvn2xatUqvPXWW09th54TlbMoVnoKCgqEiRMnCk2bNhVsbW0FS0tLwcfHR5g8ebJw7949Tb2tW7cKdevWFUxNTbW235g6daqgUqkEW1tb4YMPPhDGjBmjtcXI3bt3hddff12wtLQUVCqV8Pnnn5fZBuSh1q1b69xu5HEV2WLE1tZWsLCwEEJCQrS2GBEEQfj6668Fd3d3wcrKShgyZIjw6aef6txi5FH/+9//hLZt2wr29vaChYWF0LhxY2HTpk1PjZ2qvps3bwpjxowRvLy8BDMzM8Ha2loIDAwU5s6dq9kmQtcWEYIgCPPmzRPs7Ow0Wz88qrCwULCzsxMWL15s7EcgPdy8eVN49913BQ8PD8Hc3Fxwc3MTXn31Va3tNM6cOSO0bNlSsLCwEPz8/IQdO3bo3GLk4bYkgvBguw9bW1utez2+lVFOTo4QFhYm2NjYCO7u7sLatWufusXIRx99JDg6OgrW1tZCWFiYsHDhQq37FBQUCH379hXs7OzK3WLkoW3btgkAhDZt2pT5cykqKhKmTp0qeHp6CmZmZoKrq6vQu3dv4cSJE0/88zx06JDQr18/wdnZWTA1NRUcHR2FkJAQYePGjU/cYuSh7t27C127dtXZ9j///CMAEI4fP/7EGOj5IRMErkmWEkEQUK9ePbzzzjuIiIio7HCIiIioknA4VUIyMjKwceNGpKWlGWRvOCIiIpIuJnES4uzsDCcnJ3zzzTewt7ev7HCIiIioEjGJkxCOfBMREdFD3GKEiIiISIKYxBERERFJEJM4IiIiIgliEkdEREQkQUziiIiIiCSISRwRERGRBDGJIyIiIpIgJnFEREREEsQkjoiIiEiC/g8y/38NCdI5ygAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import statsmodels.api as sm\n",
        "\n",
        "# Define independent and dependent variables\n",
        "X = df[['Study Hours']]  # Predictor variable\n",
        "X = sm.add_constant(X)   # Add constant for intercept\n",
        "y = df['GPA']            # Target variable\n",
        "\n",
        "# Fit regression model\n",
        "model = sm.OLS(y, X).fit()\n",
        "print(model.summary())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4RHaWocB2MJR",
        "outputId": "9d25d460-db1b-4681-a9c5-5d14a34ebfa8"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            OLS Regression Results                            \n",
            "==============================================================================\n",
            "Dep. Variable:                    GPA   R-squared:                       0.026\n",
            "Model:                            OLS   Adj. R-squared:                  0.006\n",
            "Method:                 Least Squares   F-statistic:                     1.282\n",
            "Date:                Tue, 25 Mar 2025   Prob (F-statistic):              0.263\n",
            "Time:                        15:08:57   Log-Likelihood:                -193.88\n",
            "No. Observations:                  50   AIC:                             391.8\n",
            "Df Residuals:                      48   BIC:                             395.6\n",
            "Df Model:                           1                                         \n",
            "Covariance Type:            nonrobust                                         \n",
            "===============================================================================\n",
            "                  coef    std err          t      P>|t|      [0.025      0.975]\n",
            "-------------------------------------------------------------------------------\n",
            "const          57.8258      5.352     10.804      0.000      47.064      68.588\n",
            "Study Hours     0.2408      0.213      1.132      0.263      -0.187       0.669\n",
            "==============================================================================\n",
            "Omnibus:                       15.909   Durbin-Watson:                   1.329\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):                3.392\n",
            "Skew:                           0.014   Prob(JB):                        0.183\n",
            "Kurtosis:                       1.724   Cond. No.                         79.9\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "fnNQLO7p2aq7"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}